openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
servers: 
  - url: http://127.0.0.1:5000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /register:
    post:
      tags:
      - User
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the new user
                email:
                  type: string
                  description: The email of the new user
                password:
                  type: string
                  description: The password of the new user
                backup_email:
                  type: string
                  description: The backup email for account recovery
                gender:
                  type: string
                  description: The gender of the new user
                date_of_birth:
                  type: string
                  description: The date of birth of the new user
              required: 
                - username
                - email
                - password
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully registered
        '400':
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid password '{password}'"
        '409':
          description: Email already existed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email {email} already existed"
  /login:
    post:
      tags:
        - User
      summary: Login for user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the new user
                password:
                  type: string
                  description: The password of the new user
              required: 
                - email
                - password
      responses:
        '200':
          description: User login successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Incorrect email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Incorrect email or password"
  /user/{user_id}:
    get:
      tags:
        - User
      summary: Get the user account
      security: 
        - bearerAuth: []
      parameters: 
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                      email:
                        type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"